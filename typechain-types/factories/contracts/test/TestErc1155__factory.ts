/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TestErc1155,
  TestErc1155Interface,
} from "../../../contracts/test/TestErc1155";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060408051808201909152600a815269646f6d61696e2e636f6d60b01b60208201526200003e8162000045565b5062000141565b80516200005a9060029060208401906200005e565b5050565b8280546200006c9062000104565b90600052602060002090601f016020900481019282620000905760008555620000db565b82601f10620000ab57805160ff1916838001178555620000db565b82800160010185558215620000db579182015b82811115620000db578251825591602001919060010190620000be565b50620000e9929150620000ed565b5090565b5b80821115620000e95760008155600101620000ee565b600181811c908216806200011957607f821691505b602082108114156200013b57634e487b7160e01b600052602260045260246000fd5b50919050565b61151280620001516000396000f3fe608060405234801561001057600080fd5b50600436106100925760003560e01c80632eb2c2d6116100665780632eb2c2d6146101155780634e1273f414610128578063a22cb46514610148578063e985e9c51461015b578063f242432a1461019757600080fd5b8062fdd58e1461009757806301ffc9a7146100bd5780630e89341c146100e05780631b2ef1ca14610100575b600080fd5b6100aa6100a5366004610ca3565b6101aa565b6040519081526020015b60405180910390f35b6100d06100cb366004610ce6565b610240565b60405190151581526020016100b4565b6100f36100ee366004610d0a565b610292565b6040516100b49190610d70565b61011361010e366004610d83565b610326565b005b610113610123366004610ef1565b610345565b61013b610136366004610f9b565b610391565b6040516100b491906110a1565b6101136101563660046110b4565b6104bb565b6100d06101693660046110f0565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101136101a5366004611123565b6104c6565b60006001600160a01b03831661021a5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061027157506001600160e01b031982166303a24d0760e21b145b8061028c57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600280546102a190611188565b80601f01602080910402602001604051908101604052809291908181526020018280546102cd90611188565b801561031a5780601f106102ef5761010080835404028352916020019161031a565b820191906000526020600020905b8154815290600101906020018083116102fd57829003601f168201915b50505050509050919050565b6103413383836040518060200160405280600081525061050b565b5050565b6001600160a01b03851633148061036157506103618533610169565b61037d5760405162461bcd60e51b8152600401610211906111c3565b61038a858585858561061f565b5050505050565b606081518351146103f65760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610211565b6000835167ffffffffffffffff81111561041257610412610da5565b60405190808252806020026020018201604052801561043b578160200160208202803683370190505b50905060005b84518110156104b35761048685828151811061045f5761045f611212565b602002602001015185838151811061047957610479611212565b60200260200101516101aa565b82828151811061049857610498611212565b60209081029190910101526104ac8161123e565b9050610441565b509392505050565b6103413383836107fc565b6001600160a01b0385163314806104e257506104e28533610169565b6104fe5760405162461bcd60e51b8152600401610211906111c3565b61038a85858585856108dd565b6001600160a01b03841661056b5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610211565b33600061057785610a07565b9050600061058485610a07565b90506000868152602081815260408083206001600160a01b038b168452909152812080548792906105b6908490611259565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461061683600089898989610a52565b50505050505050565b81518351146106815760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610211565b6001600160a01b0384166106a75760405162461bcd60e51b815260040161021190611271565b3360005b845181101561078e5760008582815181106106c8576106c8611212565b6020026020010151905060008583815181106106e6576106e6611212565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156107365760405162461bcd60e51b8152600401610211906112b6565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610773908490611259565b92505081905550505050806107879061123e565b90506106ab565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516107de929190611300565b60405180910390a46107f4818787878787610bbd565b505050505050565b816001600160a01b0316836001600160a01b031614156108705760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610211565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166109035760405162461bcd60e51b815260040161021190611271565b33600061090f85610a07565b9050600061091c85610a07565b90506000868152602081815260408083206001600160a01b038c1684529091529020548581101561095f5760405162461bcd60e51b8152600401610211906112b6565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a1682528120805488929061099c908490611259565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46109fc848a8a8a8a8a610a52565b505050505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610a4157610a41611212565b602090810291909101015292915050565b6001600160a01b0384163b156107f45760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610a96908990899088908890889060040161132e565b602060405180830381600087803b158015610ab057600080fd5b505af1925050508015610ae0575060408051601f3d908101601f19168201909252610add91810190611373565b60015b610b8d57610aec611390565b806308c379a01415610b265750610b016113ac565b80610b0c5750610b28565b8060405162461bcd60e51b81526004016102119190610d70565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610211565b6001600160e01b0319811663f23a6e6160e01b146106165760405162461bcd60e51b815260040161021190611436565b6001600160a01b0384163b156107f45760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610c01908990899088908890889060040161147e565b602060405180830381600087803b158015610c1b57600080fd5b505af1925050508015610c4b575060408051601f3d908101601f19168201909252610c4891810190611373565b60015b610c5757610aec611390565b6001600160e01b0319811663bc197c8160e01b146106165760405162461bcd60e51b815260040161021190611436565b80356001600160a01b0381168114610c9e57600080fd5b919050565b60008060408385031215610cb657600080fd5b610cbf83610c87565b946020939093013593505050565b6001600160e01b031981168114610ce357600080fd5b50565b600060208284031215610cf857600080fd5b8135610d0381610ccd565b9392505050565b600060208284031215610d1c57600080fd5b5035919050565b6000815180845260005b81811015610d4957602081850181015186830182015201610d2d565b81811115610d5b576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610d036020830184610d23565b60008060408385031215610d9657600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610de157610de1610da5565b6040525050565b600067ffffffffffffffff821115610e0257610e02610da5565b5060051b60200190565b600082601f830112610e1d57600080fd5b81356020610e2a82610de8565b604051610e378282610dbb565b83815260059390931b8501820192828101915086841115610e5757600080fd5b8286015b84811015610e725780358352918301918301610e5b565b509695505050505050565b600082601f830112610e8e57600080fd5b813567ffffffffffffffff811115610ea857610ea8610da5565b604051610ebf601f8301601f191660200182610dbb565b818152846020838601011115610ed457600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215610f0957600080fd5b610f1286610c87565b9450610f2060208701610c87565b9350604086013567ffffffffffffffff80821115610f3d57600080fd5b610f4989838a01610e0c565b94506060880135915080821115610f5f57600080fd5b610f6b89838a01610e0c565b93506080880135915080821115610f8157600080fd5b50610f8e88828901610e7d565b9150509295509295909350565b60008060408385031215610fae57600080fd5b823567ffffffffffffffff80821115610fc657600080fd5b818501915085601f830112610fda57600080fd5b81356020610fe782610de8565b604051610ff48282610dbb565b83815260059390931b850182019282810191508984111561101457600080fd5b948201945b838610156110395761102a86610c87565b82529482019490820190611019565b9650508601359250508082111561104f57600080fd5b5061105c85828601610e0c565b9150509250929050565b600081518084526020808501945080840160005b838110156110965781518752958201959082019060010161107a565b509495945050505050565b602081526000610d036020830184611066565b600080604083850312156110c757600080fd5b6110d083610c87565b9150602083013580151581146110e557600080fd5b809150509250929050565b6000806040838503121561110357600080fd5b61110c83610c87565b915061111a60208401610c87565b90509250929050565b600080600080600060a0868803121561113b57600080fd5b61114486610c87565b945061115260208701610c87565b93506040860135925060608601359150608086013567ffffffffffffffff81111561117c57600080fd5b610f8e88828901610e7d565b600181811c9082168061119c57607f821691505b602082108114156111bd57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602f908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526e195c881b9bdc88185c1c1c9bdd9959608a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561125257611252611228565b5060010190565b6000821982111561126c5761126c611228565b500190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b6040815260006113136040830185611066565b82810360208401526113258185611066565b95945050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061136890830184610d23565b979650505050505050565b60006020828403121561138557600080fd5b8151610d0381610ccd565b600060033d11156113a95760046000803e5060005160e01c5b90565b600060443d10156113ba5790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156113ea57505050505090565b82850191508151818111156114025750505050505090565b843d870101602082850101111561141c5750505050505090565b61142b60208286010187610dbb565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b0386811682528516602082015260a0604082018190526000906114aa90830186611066565b82810360608401526114bc8186611066565b905082810360808401526114d08185610d23565b9897505050505050505056fea264697066735822122076cf3b2c278c8c0fdf6365f46d975d072c2e8bc5069a567d3fea60d1ec98a9ce64736f6c63430008090033";

type TestErc1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestErc1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestErc1155__factory extends ContractFactory {
  constructor(...args: TestErc1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestErc1155> {
    return super.deploy(overrides || {}) as Promise<TestErc1155>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestErc1155 {
    return super.attach(address) as TestErc1155;
  }
  override connect(signer: Signer): TestErc1155__factory {
    return super.connect(signer) as TestErc1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestErc1155Interface {
    return new utils.Interface(_abi) as TestErc1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestErc1155 {
    return new Contract(address, _abi, signerOrProvider) as TestErc1155;
  }
}
