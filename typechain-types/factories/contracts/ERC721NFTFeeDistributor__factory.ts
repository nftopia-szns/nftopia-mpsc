/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ERC721NFTFeeDistributor,
  ERC721NFTFeeDistributorInterface,
} from "../../contracts/ERC721NFTFeeDistributor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_feePercent",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "loyaltyFeePercent",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "loyaltyFeeRecipient",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct ERC721NFTFeeDistributor.Collection",
        name: "collection",
        type: "tuple",
      },
    ],
    name: "CollectionUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "collections",
    outputs: [
      {
        internalType: "uint256",
        name: "loyaltyFeePercent",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "loyaltyFeeRecipient",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolFeePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolFeeRecipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nft",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_percent",
        type: "uint256",
      },
    ],
    name: "setCollection",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_percent",
        type: "uint256",
      },
    ],
    name: "setProtocolFeePercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "setProtocolFeeRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260fa6002556101f460045534801561001b57600080fd5b506040516106e83803806106e883398101604081905261003a916100bc565b6100433361006c565b600180546001600160a01b0319166001600160a01b0393909316929092179091556002556100f6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080604083850312156100cf57600080fd5b82516001600160a01b03811681146100e657600080fd5b6020939093015192949293505050565b6105e3806101056000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063bc063e1a11610066578063bc063e1a1461014e578063d6e6eb9f14610165578063dce97c511461016e578063e521cb9214610181578063f2fde38b1461019457600080fd5b806343add2e6146100a357806364df049e146100f5578063715018a6146101205780638da5cb5b1461012a578063a49834211461013b575b600080fd5b6100d36100b1366004610536565b600560205260009081526040902080546001909101546001600160a01b031682565b604080519283526001600160a01b039091166020830152015b60405180910390f35b600154610108906001600160a01b031681565b6040516001600160a01b0390911681526020016100ec565b6101286101a7565b005b6000546001600160a01b0316610108565b610128610149366004610558565b6101bb565b61015760045481565b6040519081526020016100ec565b61015760025481565b61012861017c366004610571565b610209565b61012861018f366004610536565b610369565b6101286101a2366004610536565b6103f7565b6101af610470565b6101b960006104ca565b565b6101c3610470565b6004548111156102045760405162461bcd60e51b81526020600482015260076024820152666d61785f66656560c81b60448201526064015b60405180910390fd5b600255565b610211610470565b60045481111561024d5760405162461bcd60e51b81526020600482015260076024820152666d61785f66656560c81b60448201526064016101fb565b6001600160a01b0383166102925760405162461bcd60e51b815260206004820152600c60248201526b7a65726f206164647265737360a01b60448201526064016101fb565b6001600160a01b0382166102d75760405162461bcd60e51b815260206004820152600c60248201526b7a65726f206164647265737360a01b60448201526064016101fb565b6040805180820182528281526001600160a01b0384811660208084019182528783166000908152600582528590209351808555915160019094018054949093166001600160a01b031990941684179092558351338152918201528083019190915290517fff46874afead5e80822ecf46dda060808cd504220df8a1b17acbdf840e1545419181900360600190a1505050565b610371610470565b6001600160a01b0381166103d55760405162461bcd60e51b815260206004820152602560248201527f4572633732314e46544665654469737472696275746f723a207a65726f206164604482015264647265737360d81b60648201526084016101fb565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6103ff610470565b6001600160a01b0381166104645760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101fb565b61046d816104ca565b50565b6000546001600160a01b031633146101b95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101fb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461053157600080fd5b919050565b60006020828403121561054857600080fd5b6105518261051a565b9392505050565b60006020828403121561056a57600080fd5b5035919050565b60008060006060848603121561058657600080fd5b61058f8461051a565b925061059d6020850161051a565b915060408401359050925092509256fea2646970667358221220a32af77a567395dcf4ec7cc690fbb8fe1d67c42ab52fdaec722f19924ae3a6ca64736f6c63430008090033";

type ERC721NFTFeeDistributorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721NFTFeeDistributorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721NFTFeeDistributor__factory extends ContractFactory {
  constructor(...args: ERC721NFTFeeDistributorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _recipient: PromiseOrValue<string>,
    _feePercent: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721NFTFeeDistributor> {
    return super.deploy(
      _recipient,
      _feePercent,
      overrides || {}
    ) as Promise<ERC721NFTFeeDistributor>;
  }
  override getDeployTransaction(
    _recipient: PromiseOrValue<string>,
    _feePercent: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_recipient, _feePercent, overrides || {});
  }
  override attach(address: string): ERC721NFTFeeDistributor {
    return super.attach(address) as ERC721NFTFeeDistributor;
  }
  override connect(signer: Signer): ERC721NFTFeeDistributor__factory {
    return super.connect(signer) as ERC721NFTFeeDistributor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721NFTFeeDistributorInterface {
    return new utils.Interface(_abi) as ERC721NFTFeeDistributorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721NFTFeeDistributor {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC721NFTFeeDistributor;
  }
}
